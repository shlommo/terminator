{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/js/renderGraphic/data/uniform-model.js","webpack:///./src/js/analyser.js","webpack:///./src/js/renderGraphic/postprocess-webgl.js","webpack:///./src/js/renderGraphic/render-interface/render-square-map.js","webpack:///./src/js/renderGraphic/render-interface/render-spectrum.js","webpack:///./src/js/renderGraphic/render-interface/render-words.js","webpack:///./src/js/renderGraphic/utils/rondomize-text.js","webpack:///./src/js/renderGraphic/render-interface/index.js","webpack:///./src/js/renderGraphic/shaders/tools/random.js","webpack:///./src/js/renderGraphic/shaders/tools/snoice.js","webpack:///./src/js/renderGraphic/shaders/fs-source.js","webpack:///./src/js/renderGraphic/shaders/vs-source.js","webpack:///./src/js/renderGraphic/prepare-webgl.js","webpack:///./src/js/renderGraphic/index.js","webpack:///./src/js/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","UniformModel","_classCallCheck","this","glTime","glResolution","audioCtx","window","AudioContext","webkitAudioContext","analyser","createAnalyser","navigator","mediaDevices","getUserMedia","audio","then","stream","createMediaStreamSource","connect","catch","err","console","log","_uniformModel","GL_TIME","uniforms","canvas","gl","sourceCanvas","delta","resolution","innerWidth","innerHeight","uniform1f","time","uniform2fv","Float32Array","texImage2D","TEXTURE_2D","RGBA","UNSIGNED_BYTE","viewport","width","height","enable","DEPTH_TEST","clear","COLOR_BUFFER_BIT","drawArrays","TRIANGLES","Point","canvasEl","pos","vpx","vpy","x","y","z","cX","cY","cZ","xPos","yPos","map2D","angleZ","cosZ","Math","cos","sinZ","sin","x1","y1","scaleX","scaleY","Square","ctx","getContext","points","dist","length","rotateZ","beginPath","moveTo","lineTo","closePath","stroke","squares","document","getElementById","render","clearRect","sort","a","b","len","update","requestAnimationFrame","push","strokeStyle","lineWidth","strokeRect","array","startX","lineX","fillRect","it","text","fz","textBase","setTimeout","fillStyle","font","fillText","getSeveralRandomInt","f","min","max","q","nums","getRandomFromArr","arr","randomFunc","randomStr","getRandomInt","floor","random","num","alphabet","charA","charZ","charCodeAt","j","String","fromCharCode","genCharArray","numsWithAlphabet","genNumArr","concat","randomTemp","randomArr","audioAnalyser","demo","querySelector","offsetWidth","offsetHeight","canvasWidth","canvasHeight","magicBase","analyserStartX","fftSize","bufferLength","dataArray","Uint8Array","sampleArr","_rondomizeText2","default","_renderWords2","getByteFrequencyData","_renderSpectrum2","_renderSquareMap2","snoice","fsSource","vsSource","program","createProgram","vertexShader","createShader","VERTEX_SHADER","shaderSource","_vsSource2","compileShader","fragmentShader","FRAGMENT_SHADER","_fsSource2","attachShader","linkProgram","useProgram","positionLocation","getAttribLocation","texcoordLocation","getUniformLocation","vsBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","enableVertexAttribArray","vertexAttribPointer","FLOAT","txBuffer","texture","createTexture","bindTexture","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","canvasBackLayer","video","PREVIOUS_T","_index2","_prepareWebgl2","mainLoop","t","_postprocessWebgl2","alert","navigatorConfig","src","URL","createObjectURL","_analyser2"],"mappings":"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","file":"./js/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 16);\n","class UniformModel {\n  constructor() {\n    this.glTime = null;\n    this.glResolution = null;\n  }\n\n  get time() {\n    return this.glTime;\n  }\n\n  set time(glTime) {\n    this.glTime = glTime;\n  }\n\n  get resolution() {\n    return this.glResolution;\n  }\n\n  set resolution(glResolution) {\n    this.glResolution = glResolution;\n  }\n}\n\nexport default new UniformModel();\n","const audioCtx = new (window.AudioContext || window.webkitAudioContext)();\nlet source;\nconst analyser = audioCtx.createAnalyser();\n\nif (navigator.mediaDevices.getUserMedia) {\n  const constraints = { audio: true };\n  navigator.mediaDevices\n    .getUserMedia(constraints)\n    .then((stream) => {\n      source = audioCtx.createMediaStreamSource(stream);\n      source.connect(analyser);\n    })\n    .catch((err) => {\n      console.log(`The following gUM error occured: ${err}`);\n    });\n} else {\n  console.log('getUserMedia not supported on your browser!');\n}\n\nexport default analyser;\n","import UniformModel from './data/uniform-model';\n\nlet GL_TIME = 0;\nconst uniforms = UniformModel;\n\nfunction postprocessWebGL(canvas, gl, sourceCanvas, delta) {\n  const resolution = [window.innerWidth, window.innerHeight];\n  GL_TIME += delta;\n  gl.uniform1f(uniforms.time, GL_TIME / 1000);\n  gl.uniform2fv(uniforms.resolution, new Float32Array(resolution));\n\n  gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, sourceCanvas);\n  gl.viewport(0, 0, canvas.width, canvas.height);\n  gl.enable(gl.DEPTH_TEST);\n  gl.clear(gl.COLOR_BUFFER_BIT);\n  gl.drawArrays(gl.TRIANGLES, 0, 6);\n}\n\nexport default postprocessWebGL;\n","class Point {\n  constructor(canvasEl, pos) {\n    this.canvas = canvasEl;\n    this.vpx = this.canvas.width / 2;\n    this.vpy = this.canvas.height / 2;\n\n    this.x = pos.x - this.vpx || 0;\n    this.y = pos.y - this.vpy || 0;\n    this.z = pos.z || 0;\n\n    this.cX = 0;\n    this.cY = 0;\n    this.cZ = 0;\n\n    this.xPos = 0;\n    this.yPos = 0;\n    this.map2D();\n  }\n\n  rotateZ(angleZ) {\n    const cosZ = Math.cos(angleZ);\n    const sinZ = Math.sin(angleZ);\n    const x1 = this.x * cosZ - this.y * sinZ;\n    const y1 = this.y * cosZ + this.x * sinZ;\n\n    this.x = x1;\n    this.y = y1;\n  }\n\n  map2D() {\n    const scaleX = this.vpx / (this.vpx + this.z + this.cZ);\n    const scaleY = this.vpx / (this.vpx + this.z + this.cZ);\n\n    this.xPos = this.vpx + (this.cX + this.x) * scaleX;\n    this.yPos = this.vpy + (this.cY + this.y) * scaleY;\n  }\n}\n\nclass Square {\n  constructor(canvasEl, z) {\n    this.canvas = canvasEl;\n    this.ctx = this.canvas.getContext('2d');\n\n    this.z = z || 0;\n\n    this.vpx = this.canvas.width / 2;\n    this.vpy = this.canvas.height / 2;\n\n    this.width = this.canvas.width / 6;\n    this.height = this.canvas.height / 3;\n    this.points = [\n      new Point(this.canvas, {\n        x: this.vpx - this.width,\n        y: this.vpy - this.height,\n        z: this.z\n      }),\n      new Point(this.canvas, {\n        x: this.vpx + this.width,\n        y: this.vpy - this.height,\n        z: this.z\n      }),\n      new Point(this.canvas, {\n        x: this.vpx + this.width,\n        y: this.vpy + this.height,\n        z: this.z\n      }),\n      new Point(this.canvas, {\n        x: this.vpx - this.width,\n        y: this.vpy + this.height,\n        z: this.z\n      })];\n    this.dist = 0;\n  }\n\n  update() {\n    for (let p = 0; p < this.points.length; p++) {\n      this.points[p].rotateZ(0.002);\n      this.points[p].z -= 3;\n      if (this.points[p].z < -300) {\n        this.points[p].z = 2700;\n      }\n      this.points[p].map2D();\n    }\n  }\n\n  render() {\n    this.ctx.beginPath();\n    this.ctx.moveTo(this.points[0].xPos, this.points[0].yPos);\n    for (let p = 1; p < this.points.length; p++) {\n      if (this.points[p].z > -(this.vpx - 50)) {\n        this.ctx.lineTo(this.points[p].xPos, this.points[p].yPos);\n      }\n    }\n\n    this.ctx.closePath();\n    this.ctx.stroke();\n\n    this.dist = this.points[this.points.length - 1].z;\n  }\n}\n\n// Init graphics stuff\nconst squares = [];\nconst canvas = document.getElementById('canvasSquare');\nconst ctx = canvas.getContext('2d');\nfunction render() {\n  ctx.clearRect(4, 4, canvas.width - 8, canvas.height - 8);\n\n  squares.sort((a, b) => b.dist - a.dist);\n\n  for (let i = 0, len = squares.length; i < len; i++) {\n    squares[i].update();\n    squares[i].render();\n  }\n  requestAnimationFrame(render);\n}\n\nfunction renderSquareMap() {\n  for (let i = 0; i < 15; i++) {\n    squares.push(new Square(canvas, -300 + (i * 200)));\n  }\n\n  ctx.strokeStyle = '#fff';\n  ctx.lineWidth = 8;\n  ctx.strokeRect(0, 0, canvas.width, canvas.height);\n  ctx.lineWidth = 2;\n  render();\n}\n\nexport default renderSquareMap;\n","function renderSpectrum(array, ctx, startX) {\n  const lineStep = 5;\n  const lineHeight = 15;\n  for (let i = 0; i < (array.length); i++) {\n    const value = array[i];\n    const lineX = i * lineStep;\n    ctx.fillRect(startX + lineX, 0 + value, 3, lineHeight);\n  }\n}\n\nexport default renderSpectrum;\n","let it = 0;\nfunction renderWords(ctx, text, fz, width, height) {\n  const lineHeight = 16;\n  const textBase = height / 4; // базовая высота отрисовки текста\n  if (it === text.length) {\n    setTimeout(() => {\n      ctx.clearRect(0, 0, width / 2, height);\n      it = 0;\n    }, 1000);\n    return false;\n  }\n  ctx.fillStyle = '#fff';\n  ctx.font = `${fz}px Apple`;\n  ctx.fillText(text[it], 20, textBase + (lineHeight * it));\n  it += 1;\n\n  return true;\n}\n\nexport default renderWords;\n","function getSeveralRandomInt(f, min, max, q) {\n  let nums = '';\n  let it = 0;\n  while (it !== q) {\n    nums += f(min, max);\n    it += 1;\n  }\n  return nums;\n}\n\nfunction genCharArray(charA, charZ) {\n  const a = [];\n  let i = charA.charCodeAt(0);\n  const j = charZ.charCodeAt(0);\n\n  for (; i <= j; i++) {\n    a.push(String.fromCharCode(i));\n  }\n  return a;\n}\n\nfunction getRandomFromArr(arr, q, randomFunc) {\n  let randomStr = '';\n  let it = 0;\n  let randomNum = 0;\n  let randomLetter = '';\n\n  while (it !== q) {\n    randomNum = randomFunc(0, arr.length);\n    randomLetter = arr[randomNum];\n    randomStr += randomLetter;\n    it += 1;\n  }\n\n  return randomStr;\n}\n\nfunction getRandomInt(min, max) {\n  return Math.floor(Math.random() * (max - min)) + min;\n}\n\nfunction genNumArr(min, max) {\n  const nums = [];\n\n  for (let i = min; i <= max; i++) {\n    nums.push(i);\n  }\n  return nums;\n}\n\nfunction randomizeText(num) {\n  const alphabet = genCharArray('A', 'Z');\n  const nums = genNumArr(0, 9);\n  const numsWithAlphabet = nums.concat(alphabet);\n  let randomTemp = '';\n  const randomArr = [];\n\n  for (let i = 0; i <= num; i++) {\n    const firstPart = getSeveralRandomInt(getRandomInt, 0, 10, 2);\n    const secondPart = getRandomFromArr(alphabet, 6, getRandomInt);\n    const thirdPart = getRandomFromArr(numsWithAlphabet, 2, getRandomInt);\n    const foutrhPart = getSeveralRandomInt(getRandomInt, 0, 10, 2);\n    randomTemp = `${firstPart} ${secondPart} ${thirdPart} ${foutrhPart}`;\n    randomArr.push(randomTemp);\n  }\n  return randomArr;\n}\n\n\nexport default randomizeText;\n","import randomizeText from './../utils/rondomize-text';\nimport renderWords from './render-words';\nimport renderSpectrum from './render-spectrum';\n\nimport renderSquareMap from './render-square-map';\n\nfunction renderInterface(canvasEl, audioAnalyser) {\n  const canvas = canvasEl;\n  const ctx = canvas.getContext('2d');\n  const demo = document.querySelector('.demo');\n  canvas.width = demo.offsetWidth;\n  canvas.height = demo.offsetHeight;\n  const canvasWidth = canvas.width;\n  const canvasHeight = canvas.height;\n  const fz = 8; // font-size\n  const magicBase = 22;\n\n  const analyser = audioAnalyser;\n  const analyserStartX = canvasWidth / 1.5;\n  analyser.fftSize = 1024;\n\n  const bufferLength = analyser.fftSize;\n  const dataArray = new Uint8Array(bufferLength);\n\n  function render() {\n    const sampleArr = randomizeText(magicBase);\n    renderWords(ctx, sampleArr, fz, canvasWidth, canvasHeight);\n\n    analyser.getByteFrequencyData(dataArray);\n\n    ctx.clearRect(analyserStartX, 0, canvasWidth, canvasHeight / 2);\n    renderSpectrum(dataArray, ctx, analyserStartX);\n\n    requestAnimationFrame(render);\n  }\n  render();\n  renderSquareMap();\n}\n\nexport default renderInterface;\n","const random = `float random(vec2 co){\n                    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n                  }`;\n\nexport default random;\n","const snoice = `vec4 permute(vec4 x){return mod(((x*34.0)+1.0)*x, 289.0);}\n                vec4 taylorInvSqrt(vec4 r){return 1.79284291400159 - 0.85373472095314 * r;}\n\n                float snoise(vec3 v) {\n                  const vec2  C = vec2(1.0/6.0, 1.0/3.0) ;\n                  const vec4  D = vec4(0.0, 0.5, 1.0, 2.0);\n\n                // First corner\n                  vec3 i  = floor(v + dot(v, C.yyy) );\n                  vec3 x0 =   v - i + dot(i, C.xxx) ;\n\n                // Other corners\n                  vec3 g = step(x0.yzx, x0.xyz);\n                  vec3 l = 1.0 - g;\n                  vec3 i1 = min( g.xyz, l.zxy );\n                  vec3 i2 = max( g.xyz, l.zxy );\n\n                  //  x0 = x0 - 0. + 0.0 * C\n                  vec3 x1 = x0 - i1 + 1.0 * C.xxx;\n                  vec3 x2 = x0 - i2 + 2.0 * C.xxx;\n                  vec3 x3 = x0 - 1. + 3.0 * C.xxx;\n\n                // Permutations\n                  i = mod(i, 289.0 );\n                  vec4 p = permute( permute( permute(\n                            i.z + vec4(0.0, i1.z, i2.z, 1.0 ))\n                          + i.y + vec4(0.0, i1.y, i2.y, 1.0 ))\n                          + i.x + vec4(0.0, i1.x, i2.x, 1.0 ));\n\n                // Gradients\n                // ( N*N points uniformly over a square, mapped onto an octahedron.)\n                  float n_ = 1.0/7.0; // N=7\n                  vec3  ns = n_ * D.wyz - D.xzx;\n\n                  vec4 j = p - 49.0 * floor(p * ns.z *ns.z);  //  mod(p,N*N)\n\n                  vec4 x_ = floor(j * ns.z);\n                  vec4 y_ = floor(j - 7.0 * x_ );    // mod(j,N)\n\n                  vec4 x = x_ *ns.x + ns.yyyy;\n                  vec4 y = y_ *ns.x + ns.yyyy;\n                  vec4 h = 1.0 - abs(x) - abs(y);\n\n                  vec4 b0 = vec4( x.xy, y.xy );\n                  vec4 b1 = vec4( x.zw, y.zw );\n\n                  vec4 s0 = floor(b0)*2.0 + 1.0;\n                  vec4 s1 = floor(b1)*2.0 + 1.0;\n                  vec4 sh = -step(h, vec4(0.0));\n\n                  vec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy ;\n                  vec4 a1 = b1.xzyw + s1.xzyw*sh.zzww ;\n\n                  vec3 p0 = vec3(a0.xy,h.x);\n                  vec3 p1 = vec3(a0.zw,h.y);\n                  vec3 p2 = vec3(a1.xy,h.z);\n                  vec3 p3 = vec3(a1.zw,h.w);\n\n                //Normalise gradients\n                  vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\n                  p0 *= norm.x;\n                  p1 *= norm.y;\n                  p2 *= norm.z;\n                  p3 *= norm.w;\n\n                // Mix final noise value\n                  vec4 m = max(0.6 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0);\n                  m = m * m;\n                  return 42.0 * dot( m*m, vec4( dot(p0,x0), dot(p1,x1),\n                                                dot(p2,x2), dot(p3,x3) ) );\n                }`;\n\nexport default snoice;\n","import snoice from './tools/snoice';\nimport random from './tools/random';\n\nconst fsSource = `precision highp float;\n                  varying vec2 v_texcoord;\n                  uniform sampler2D u_texture;\n                  uniform vec2 u_resolution;\n                  uniform float u_time;\n\n                  const float interval = 3.0;\n\n                  ${snoice}\n                  ${random}\n\n                  void main() {\n                    float strength = smoothstep(interval * 0.5, interval, interval - mod(u_time, interval));\n\n                    vec2 shake = vec2(strength * 8.0 + 0.5) * vec2(\n                      random(vec2(u_time)) * 2.0 - 1.0,\n                      random(vec2(u_time * 2.0)) * 2.0 - 1.0\n                    ) / u_resolution;\n\n                    float y = v_texcoord.y * u_resolution.y;\n                    float rgbWave = (\n                      snoise(vec3(0.0, y * 0.01, u_time * 400.0)) * (2.0 + strength * 32.0)\n                      * snoise(vec3(0.0, y * 0.02, u_time * 200.0)) * (1.0 + strength * 4.0)\n                      + step(0.9995, sin(y * 0.005 + u_time * 1.6)) * 12.0\n                      + step(0.9999, sin(y * 0.005 + u_time * 2.0)) * -18.0\n                    ) / u_resolution.x;\n                    float rgbDiff = (6.0 + sin(u_time * 500.0 + v_texcoord.y * 40.0) * (20.0 * strength + 1.0)) / u_resolution.x;\n                    float rgbUvX = v_texcoord.x + rgbWave;\n                    float r = texture2D(u_texture, vec2(rgbUvX + rgbDiff, v_texcoord.y) + shake).r;\n                    float g = texture2D(u_texture, vec2(rgbUvX, v_texcoord.y) + shake).g;\n                    float b = texture2D(u_texture, vec2(rgbUvX - rgbDiff, v_texcoord.y) + shake).b;\n                    float grayScale = (r + g + b) / 3.0;\n\n                    float whiteNoise = (random(v_texcoord + mod(u_time, 10.0)) * 2.0 - 1.0) * (0.1 + strength * 0.15);\n\n                    float bnTime = floor(u_time * 20.0) * 200.0;\n                    float noiseX = step((snoise(vec3(0.0, v_texcoord.x * 3.0, bnTime)) + 1.0) / 2.0, 0.12 + strength * 0.3);\n                    float noiseY = step((snoise(vec3(0.0, v_texcoord.y * 3.0, bnTime)) + 1.0) / 2.0, 0.12 + strength * 0.3);\n                    float bnMask = noiseX * noiseY;\n                    float bnUvX = v_texcoord.x + sin(bnTime) * 0.2;\n                    float bnR = texture2D(u_texture, vec2(bnUvX + rgbDiff, v_texcoord.y)).r * bnMask;\n                    float bnG = texture2D(u_texture, vec2(bnUvX, v_texcoord.y)).g * bnMask;\n                    float bnB = texture2D(u_texture, vec2(bnUvX - rgbDiff, v_texcoord.y)).b * bnMask;\n                    vec4 blockNoise = vec4(bnR, 0, 0, 1.0);\n\n                    float bnTime2 = floor(u_time * 25.0) * 300.0;\n                    float noiseX2 = step((snoise(vec3(0.0, v_texcoord.x * 2.0, bnTime2)) + 1.0) / 2.0, 0.12 + strength * 0.5);\n                    float noiseY2 = step((snoise(vec3(0.0, v_texcoord.y * 8.0, bnTime2)) + 1.0) / 2.0, 0.12 + strength * 0.3);\n                    float bnMask2 = noiseX2 * noiseY2;\n                    float bnR2 = texture2D(u_texture, vec2(bnUvX + rgbDiff, v_texcoord.y)).r * bnMask2;\n                    float bnG2 = texture2D(u_texture, vec2(bnUvX, v_texcoord.y)).g * bnMask2;\n                    float bnB2 = texture2D(u_texture, vec2(bnUvX - rgbDiff, v_texcoord.y)).b * bnMask2;\n                    vec4 blockNoise2 = vec4(bnR2, 0, 0, 1.0);\n\n                    float waveNoise = (sin(v_texcoord.y * 1200.0) + 1.0) / 2.0 * (0.1 + strength * 0.1);\n\n                    gl_FragColor = vec4(grayScale, 0, 0, 1.0) * (1.0 - bnMask - bnMask2) + (whiteNoise + blockNoise + blockNoise2 - waveNoise);\n                  }`;\n\nexport default fsSource;\n","const vsSource = `attribute vec2 coordinates;\n                    attribute vec2 texture_coordinates;\n                    varying vec2 v_texcoord;\n                    void main() {\n                      gl_Position = vec4(coordinates, 0.0, 1.0);\n                      v_texcoord = texture_coordinates;\n                    }`;\n\nexport default vsSource;\n","import UniformModel from './data/uniform-model';\nimport vsSource from './shaders/vs-source';\nimport fsSource from './shaders/fs-source';\n\nconst uniforms = UniformModel;\n\nfunction prepareWebGL(gl) {\n  const program = gl.createProgram();\n\n  const vertexShader = gl.createShader(gl.VERTEX_SHADER);\n  gl.shaderSource(vertexShader, vsSource);\n  gl.compileShader(vertexShader);\n\n  const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n  gl.shaderSource(fragmentShader, fsSource);\n  gl.compileShader(fragmentShader);\n\n  gl.attachShader(program, vertexShader);\n  gl.attachShader(program, fragmentShader);\n\n  gl.linkProgram(program);\n  gl.useProgram(program);\n\n  const positionLocation = gl.getAttribLocation(program, 'coordinates');\n  const texcoordLocation = gl.getAttribLocation(program, 'texture_coordinates');\n  uniforms.time = gl.getUniformLocation(program, 'u_time');\n  uniforms.resolution = gl.getUniformLocation(program, 'u_resolution');\n\n  const vsBuffer = gl.createBuffer();\n  const vertices = [\n    -1, -1,\n    1, -1,\n    -1, 1,\n    -1, 1,\n    1, -1,\n    1, 1\n  ];\n\n  gl.bindBuffer(gl.ARRAY_BUFFER, vsBuffer);\n  gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(vertices), gl.STATIC_DRAW);\n  gl.enableVertexAttribArray(positionLocation);\n  gl.vertexAttribPointer(positionLocation, 2, gl.FLOAT, false, 0, 0);\n\n  const txBuffer = gl.createBuffer();\n  const textureCoordinates = [\n    0, 1,\n    1, 1,\n    0, 0,\n    0, 0,\n    1, 1,\n    1, 0\n  ];\n\n  gl.bindBuffer(gl.ARRAY_BUFFER, txBuffer);\n  gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(textureCoordinates), gl.STATIC_DRAW);\n  gl.enableVertexAttribArray(texcoordLocation);\n  gl.vertexAttribPointer(texcoordLocation, 2, gl.FLOAT, false, 0, 0);\n\n  const texture = gl.createTexture();\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n}\n\nexport default prepareWebGL;\n","import prepareWebGL from './prepare-webgl';\nimport renderInterface from './render-interface/index';\nimport postprocessWebGL from './postprocess-webgl';\n\n\nconst canvasBackLayer = document.getElementById('canvasBackLayer');\n\nfunction renderGraphic(canvas, gl, video, audioAnalyser) {\n  let PREVIOUS_T = 0;\n\n  if (!gl) {\n    alert('Ваш браузер слишком стар для этого.');\n    return;\n  }\n\n  renderInterface(canvasBackLayer, audioAnalyser);\n\n  function mainLoop(t) {\n    const delta = t - PREVIOUS_T;\n    PREVIOUS_T = t;\n    postprocessWebGL(canvas, gl, video, delta);\n    requestAnimationFrame(mainLoop);\n  }\n\n  prepareWebGL(gl);\n  requestAnimationFrame(mainLoop);\n}\n\nexport default renderGraphic;\n","import renderGraphic from './renderGraphic/index';\nimport analyser from './analyser';\n\nconst canvas = document.getElementById('canvasStreaming');\nconst gl = canvas.getContext('webgl') || canvas.getContext('experimental-webgl');\nconst video = document.getElementById('player');\n\nconst navigatorConfig = {\n  audio: false,\n  video: {\n    width: window.innerWidth,\n    height: window.innerHeight\n  }\n};\n\nnavigator.mediaDevices.getUserMedia(navigatorConfig)\n  .then((stream) => {\n    video.src = URL.createObjectURL(stream);\n    renderGraphic(canvas, gl, video, analyser);\n  });\n"],"sourceRoot":""}